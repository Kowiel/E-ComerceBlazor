@page "/product/{id:int}"
@using BlazorEcomerce.Shared.Models
@inject IProductService _ProductService

<PageTitle>Virtual Notice-board</PageTitle>
@if(Product==null)
{
    <div class="loader"> </div>
     <h1>@message</h1>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            @if (!string.IsNullOrEmpty(Product.ImgURL))
            {
                <img class="media-img" src="@Product.ImgURL" alt="@Product.Title" />
            }
            else
            {
                <MudCarousel Class="mud-width-full" ItemsSource="@Product.Images" Style="height: 400px;">
                    <ItemTemplate>
                        <MudImage Style="height:350px;width:300px" Src="@context.FileData"></MudImage>>
                    </ItemTemplate>
                </MudCarousel>
            }
        </div>
        <br/>
        <br/>
        <br/>
        <br/>

        <div class="media-body">
            <h2 class="mb-0">@Product.Title</h2>
            <p>@Product.Description</p>
            <h4 class="newPrice">@Product.Price zł</h4>
        </div>
        <div class ="media-body">
            <h5>Sellers Details</h5>
            <p>Username: @Product.User.Username</p>
            <p>Email: @Product.User.Email</p>
            <p>PhoneNumber: @Product.User.PhoneNumber</p>
            <p>PhoneNumber: @Product.User.Localisation</p>
        </div>
    </div>




  
}



@code 
{
    private Product? Product = null;
    private string message="";
    private int CurentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loadaing";
        var result = await _ProductService.GetProduct(Id);
        if(!result.Success)
        {
           message = "No such Product";
        }
        else
        {
            Product = result.Value;
        }
    }

}
