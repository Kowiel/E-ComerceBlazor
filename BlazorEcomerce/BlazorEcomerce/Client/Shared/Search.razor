@using BlazorEcomerce.Shared.Services
@inject NavigationManager _navmenager;
@inject IProductService _ProductService;
@inject ICategoryService _CategoryService;
@implements IDisposable 


<div class="input-group-text">
    <HomeButon/>
    <input @bind-value = "SearchText"
           @bind-value:event="oninput"
           type="search"
           list="products"
           @onkeyup="HandleSearh"
           class="form-control"
           placeholder="Search..."
           @ref="SearchImput"/>
    <datalist id="products">
        @foreach (var item in Sugestions)
       {
           <option>@item</option>
       }
    </datalist>
<select @bind-value= "Category"  @bind-value:event="oninput" @ref="CategoryInput" list="Categories" class="ComboBox">
     <option value="All">All</option>
    @foreach (var Categorie in  _CategoryService.Categories)
       {
           <option value="@Categorie.Name" >@Categorie.Name</option>
       }
    
</select>
    <div class="input-group-append">
        <button class="btn btn-primary" @onclick="SearchProducts">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
    <UserButton/>
</div>

@code 
{
    private string SearchText = string.Empty;
    private string Category;
    private int ProductsPerPage = 3;
    private List<string> Sugestions = new List<string>();
    protected ElementReference SearchImput;
    protected ElementReference CategoryInput;

    protected override async void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            await SearchImput.FocusAsync();
        }
    }
    protected override void OnInitialized()
    {
        _CategoryService.CategorysLoaded += StateHasChanged;
    }
    public void Dispose()
    {
        _CategoryService.CategorysLoaded -= StateHasChanged;
    }

    public void SearchProducts()
    {
        _navmenager.NavigateTo($"search/{SearchText}/{Category}/{ProductsPerPage}/1");
    }

    public async Task HandleSearh(KeyboardEventArgs arg)
    {
        if(arg.Key==null || arg.Key.Equals("Enter"))
        {
            SearchProducts();
        }
        else if(SearchText.Length>1)
        {
            if (Category == null)
                Category = "All";
            Sugestions = await _ProductService.GetProductSercheSugestion(SearchText,Category);
            }
        }
}
