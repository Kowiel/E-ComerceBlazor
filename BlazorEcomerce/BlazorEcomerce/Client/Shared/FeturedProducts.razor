@inject IProductService _ProductService
@implements IDisposable

<center><h2>Fetured Products</h2></center>
@if(_ProductService.Products==null || _ProductService.Products.Count==0)
{
    <span>@_ProductService.message</span>
}
else
{
    <div class="container">
        @foreach(var product in _ProductService.Products)
        {
            if(product.Featured)
            {
                <div class="featured-product">
                    <div class="center">
                    <div>
                        <a href="product/@product.Id">
                            <img src="@product.ImgURL" />
                        </a>
                    </div>
                    <h4>
                        <a href="product/@product.Id">
                            @product.Title
                        </a>
                    </h4>
                    @if(product.Variants!=null && product.Variants.Count>0)
                    {
                        <h6 class="price">
                            $@product.Variants[0].Price;
                        </h6>
                    }
                    </div>
                </div>
            }
        }
    </div>
}



@code 
{
      protected override void OnInitialized()
    {
        _ProductService.ProductChanged += StateHasChanged;
    }
    public void Dispose()
    {
        _ProductService.ProductChanged -= StateHasChanged;
    }
}
