@page "/resetpassword"
@using Microsoft.AspNetCore.WebUtilities;
@inject IAutenticationService _AutenticationService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider Authentication


<PageTitle>Reset Password</PageTitle>

<div class="container">
    <h3><b>Reset Password</b></h3>

    <EditForm Model="requestEmail" OnValidSubmit="HandleReset">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="mb-3">
            <label for="emailaddres"> EmailAddres</label>
            <br />
            <InputText id="emailaddres" @bind-Value="requestEmail.Email" class="justify-content-center"  />
            <ValidationMessage For="@(() => requestEmail.Email)" />
        </div>
        <div class="mb-3">
            <label for="confirmemailaddres">Confirm  EmailAddres</label>
            <br />
            <InputText id="confirmemailaddres" @bind-Value="requestEmail.ConfirmEmail" class="justify-content-center"  />
            <ValidationMessage For="@(() => requestEmail.ConfirmEmail)" />
        </div>
        <button type="submit" class="btn btn-primary">Apply</button>
    </EditForm>
    <div class="text-danger">
        <span>@errorMessage</span>
    </div>
</div>

@code
{
    ChangeEmailClass requestEmail = new ChangeEmailClass();

    private string errorMessage = string.Empty;

    private string returnUrl = string.Empty;


    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }

    private async Task HandleReset()
    {
      
    }

}
