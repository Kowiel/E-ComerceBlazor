@page "/profile"
@inject IAutenticationService _IAutenticationService
@attribute [Authorize]

<div class="container CenterText">
<AuthorizeView>
    <h2>Hi! You're logged in as <i>@context.User.Identity.Name</i>.</h2>
</AuthorizeView>

<br/>
<h3>Informacje o tobie</h3>
<h5>Dane Kontaktowe</h5>
<p>Mail: @Userdata.Email</p>
<p>Phone Number: @Userdata.PhoneNumber</p>
<b>Role: @Userdata.Role [Cant be eddited]</b>

<h5> Eddit Contact details</h5>
<p>If you want them the same way enter the same data</p>

  <EditForm Model="request" OnValidSubmit="ChangeData">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="mb-3">
        <label for="password">New Phone Number</label>
        <br/>
            <InputText id="password" @bind-Value="request.Password" class="justify-content-center" type="text" />
       <ValidationMessage For="@(() => request.Password)" />
    </div>
<div class="mb-3">
        <label for="confirmPassword">Confirm New Password</label>
        <br />
            <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="justify-content-center" type="text" />
        <ValidationMessage For="@(() => request.ConfirmPassword)" />
</div>
    <button type="submit" class="btn btn-primary">Apply</button>
</EditForm>

<h5>Change Password</h5>

<EditForm Model="request" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="mb-3">
        <label for="password">New Password</label>
        <br/>
            <InputText id="password" @bind-Value="request.Password" class="justify-content-center" type="password" />
       <ValidationMessage For="@(() => request.Password)" />
    </div>
<div class="mb-3">
        <label for="confirmPassword">Confirm New Password</label>
        <br />
        <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="justify-content-center" type="password" />
        <ValidationMessage For="@(() => request.ConfirmPassword)" />
</div>
    <button type="submit" class="btn btn-primary">Apply</button>
</EditForm>


</div>
@message

@code {

    ChangePaswordClass request = new ChangePaswordClass();
    User Userdata = new User();
    string message = string.Empty;

    private async Task ChangePassword()
    {
        var result = await _IAutenticationService.CHangePassword(request);
        message = result.ReturnMesage;
    }

     private async Task ChangeData()
    {
        var result = await _IAutenticationService.CHangePassword(request);
        message = result.ReturnMesage;
    }

    protected override async Task OnParametersSetAsync()
    {
        var result = await _IAutenticationService.FindUser();
        Userdata = result.Value;
    }

    
}